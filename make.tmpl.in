# @configure_input@
#
# Copyright (C) 2001 Sistina Software
#
# This LVM library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This LVM library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this LVM library; if not, write to the Free
# Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
# MA 02111-1307, USA

SHELL = /bin/sh

@SET_MAKE@

CC = @CC@
RANLIB = @RANLIB@
SHELL = /bin/sh
INSTALL = @INSTALL@
LN_S = @LN_S@
LIBS = @LIBS@
CFLAGS += @CFLAGS@
LD_DEPS += @LD_DEPS@

# Setup directory variables
prefix = $(DESTDIR)@prefix@
exec_prefix = $(DESTDIR)@exec_prefix@
bindir = @bindir@
includedir = @includedir@
libdir = @libdir@
sbindir = @sbindir@
infodir = @infodir@
mandir = @mandir@
kerneldir = @kerneldir@
interface = @interface@
interfacedir = $(top_srcdir)/lib/$(interface)

# setup misc variables
# define the ownership variables for the binaries and man pages
OWNER = @OWNER@
GROUP = @GROUP@

# The number of jobs to run, if blank, defaults to the make standard
ifndef MAKEFLAGS
MAKEFLAGS = @JOBS@
endif

SUFFIXES=.c .d .o .so .a

CFLAGS+=-fPIC -Wall -Wundef -Wshadow -Wcast-align -Wwrite-strings -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Winline

#CFLAGS+=-W -Wconversion -Wpointer-arith -Wredundant-decls -Wbad-function-cast -Wcast-qual -Wmissing-noreturn

ifeq ("@DEBUG@", "yes")
  CFLAGS+=-g -fno-omit-frame-pointer -DDEBUG
else
  CFLAGS+=-O2
endif

ifeq ("@COMPAT@", "yes")
  CFLAGS+=-DDM_COMPAT
endif

#CFLAGS+=-pg
#LD_FLAGS+=-pg

STRIP=
#STRIP=-s

LIB_VERSION := $(shell cat $(top_srcdir)/VERSION | \
		 awk -F '.' '{printf "%s.%s",$$1,$$2}')

INCLUDES+=-I. -I$(top_srcdir)/include

ifdef DESTDIR
  INCLUDES+=-I$(DESTDIR)/usr/include
endif

ifneq ("@missingkernel@", "yes")
  INCLUDES+=-I$(kerneldir)/include
endif

INC_LNS=$(top_srcdir)/include/.symlinks_created

LD_FLAGS+=-L$(interfacedir)

DEPS=$(top_srcdir)/make.tmpl $(top_srcdir)/VERSION Makefile $(INC_LNS)

OBJECTS=$(SOURCES:%.c=%.o)

SUBDIRS.install := $(SUBDIRS:=.install)
SUBDIRS.clean := $(SUBDIRS:=.clean)
SUBDIRS.distclean := $(SUBDIRS:=.distclean)

.PHONY: all install distclean clean
.PHONY: $(SUBDIRS) $(SUBDIRS.install) $(SUBDIRS.clean) $(SUBDIRS.distclean)

all: $(SUBDIRS) $(TARGETS)

install: all $(SUBDIRS.install)

$(SUBDIRS):
	$(MAKE) -C $@

$(SUBDIRS.install): $(SUBDIRS)
	$(MAKE) -C $(@:.install=) install

$(SUBDIRS.clean):
	-$(MAKE) -C $(@:.clean=) clean

$(SUBDIRS.distclean):
	-$(MAKE) -C $(@:.distclean=) distclean

$(TARGETS): $(OBJECTS)

%.o: %.c
	$(CC) -c $(INCLUDES) $(CFLAGS) $< -o $@

$(LIB_SHARED): $(OBJECTS) $(LD_DEPS)
	$(CC) -shared -Wl,-soname,$(notdir $@).$(LIB_VERSION) \
	-Wl,--version-script,.export.sym $(OBJECTS) -o $@

$(LIB_STATIC): $(OBJECTS)
	$(RM) $@
	$(AR) r $@ $(OBJECTS)
	$(RANLIB) $@

%.d: %.c
	set -e; \
	FILE=`echo $@ | sed 's/\\//\\\\\\//g;s/\\.d//g'`; \
	DEPS=`echo $(DEPS) | sed -e 's/\\//\\\\\\//g'`; \
	$(CC) -MM $(INCLUDES) $(CFLAGS) $< | \
	sed "s/\(.*\)\.o[ :]*/$$FILE.o $$FILE.d : $$DEPS /g" > $@; \
		[ -s $@ ] || $(RM) $@

clean: $(SUBDIRS.clean)
	$(RM) $(OBJECTS) $(TARGETS) $(CLEAN_TARGETS) $(SOURCES:%.c=%.d)

distclean: $(SUBDIRS.distclean)
	$(RM) $(OBJECTS) $(TARGETS) $(CLEAN_TARGETS) $(SOURCES:%.c=%.d) \
	      config.cache config.log config.status \
	      Makefile make.tmpl core

.export.sym: .exported_symbols
	set -e; (echo "Base {"; echo "	global:"; \
		 sed "s/^/		/;s/$$/;/" < $<; \
		 echo "	local:"; echo "		*;"; echo "};") > $@

ifneq ($(MAKECMDGOALS),clean)
  ifneq ($(MAKECMDGOALS),distclean)
    ifdef SOURCES
       -include $(SOURCES:.c=.d)
    endif
  endif
endif

